
<div class="container my-4">
  <h2>Search</h2>
  <div class="input-group mb-3">
    <input id="inpSch" type="text" class="form-control mr-2" placeholder="Write a company">
    <div class="input-group-append">
      <button class="btn btn-outline-primary" type="button" id="btnSch">Search</button>
    </div>
  </div>
  
  <h3 class="my-4">Results</h3>
  
  <div id="results" class="row d-none">
  <div class="card col-md-4 mr-4" style="width: 18rem;">
    <img  id="logo" src="" class="card-img-top" alt="">
    <div class="card-body">
      <div id="itemName" class="card-title font-weight-bold"></div>
      <p id="itemDescription" class="card-text"></p>
    </div>
  </div>
    
  <div class="card col-md-6" style="width: 18rem;">
      <div>
        <canvas id="myChart"></canvas>
      </div>
  </div>
  </div>
</div>

<script>
var btnSch = document.getElementById('btnSch');
var results = document.getElementById('results');
var ctx = document.getElementById('myChart');

btnSch.addEventListener('click', showResults);

// Search Validations 
function showResults() {
  var inpSch = document.getElementById('inpSch').value;
  if(inpSch === "google", "facebook", "apple", "oracle", "microsoft"){
    getTodos();
    results.classList.remove('d-none'); 
  } if(inpSch === ""){
    alert('Please write a item or company!');
  }
};

function getTodos() {
    var inpSch = document.getElementById('inpSch').value;
    
    if(inpSch === "facebook"){
      var id = 1;  
    }
    if(inpSch === "google"){
      var id = 11;  
    }
    if(inpSch === "apple"){
      var id = 21;  
    }
    if(inpSch === "oracle"){
      var id = 31;  
    }
    if(inpSch === "microsoft"){
      var id = 41;  
    }
    
  axios
    .get(`https://assembler-stock-market-webapi.herokuapp.com/api/actualprices/${id}`)
    .then(res => {
        var pricesArray = [];
          res.data.map((item)=>{
            pricesArray.push(item);
          });
        
        var prices = [pricesArray[0].price_quantity, pricesArray[1].price_quantity, pricesArray[2].price_quantity, pricesArray[3].price_quantity, pricesArray[4].price_quantity]
        
        var hour = [pricesArray[0].date.hour, pricesArray[1].date.hour, pricesArray[2].date.hour, pricesArray[3].date.hour, pricesArray[4].date.hour] 
        console.log(hour);

        var date = pricesArray[0].date.year;
        console.log(date);

  axios
    .get("https://assembler-stock-market-webapi.herokuapp.com/api/actions")
    .then(res => {
          var companiesArray = [];
          res.data.map((item)=>{
          companiesArray.push(item);
          });
    
    // Change data of company card and chartjs with search input
    var logo = document.getElementById('logo');
    var itemName = document.getElementById('itemName');
    var itemDescription = document.getElementById('itemDescription');
    var companyName = ""; 
    var companyValue = prices;

    if(inpSch === "facebook") {
      logo.src = companiesArray[0].item_logo;
      itemName.innerText = companiesArray[0].item_name;
      itemDescription.innerText = companiesArray[0].item_description;
      var companyName = companiesArray[0].item_name;
    }
    if(inpSch === "google") {
      logo.src = companiesArray[1].item_logo;
      itemName.innerText = companiesArray[1].item_name;
      itemDescription.innerText = companiesArray[1].item_description;
      var companyName = companiesArray[1].item_name;
    } 
    if(inpSch === "apple") {
      logo.src = companiesArray[2].item_logo;
      itemName.innerText = companiesArray[2].item_name;
      itemDescription.innerText = companiesArray[2].item_description;
      var companyName = companiesArray[2].item_name;
    } 
    if(inpSch === "oracle") {
      logo.src = companiesArray[3].item_logo;
      itemName.innerText = companiesArray[3].item_name;
      itemDescription.innerText = companiesArray[3].item_description;
      var companyName = companiesArray[3].item_name;
    } 
    if(inpSch === "microsoft") {
      logo.src = companiesArray[4].item_logo;
      itemName.innerText = companiesArray[4].item_name;
      itemDescription.innerText = companiesArray[4].item_description;
      var companyName = companiesArray[4].item_name;
    }
            
    let myChart = new Chart(ctx, {
    type: 'line',
    data: {
        labels: hour,
        datasets: [{
            label: date,
            data: prices,
            backgroundColor: [
                'rgba(255, 99, 132, 0.2)',
                'rgba(54, 162, 235, 0.2)',
                'rgba(255, 206, 86, 0.2)',
                'rgba(75, 192, 192, 0.2)',
                'rgba(153, 102, 255, 0.2)',
                'rgba(255, 159, 64, 0.2)'
            ],
            borderColor: [
                'rgba(255, 99, 132, 1)',
                'rgba(54, 162, 235, 1)',
                'rgba(255, 206, 86, 1)',
                'rgba(75, 192, 192, 1)',
                'rgba(153, 102, 255, 1)',
                'rgba(255, 159, 64, 1)'
            ],
            borderWidth: 1
        }]
    },
    options: {
        title: {
        display:true,
        text: companyName,
        fontSize:22
        },
        scales: {
            yAxes: [{
                ticks: {
                    beginAtZero: true
                }
            }]
        }
    }
});
        })
      .catch(err => console.error(err))
    })
      .catch(err => console.error(err))      
};
</script>